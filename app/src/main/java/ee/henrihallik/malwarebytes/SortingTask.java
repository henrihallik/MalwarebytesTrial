package ee.henrihallik.malwarebytes;

import android.os.AsyncTask;

import java.io.File;
import java.util.ArrayList;
import java.util.stream.Collectors;


public class SortingTask extends AsyncTask<SortingTask.MODE, Void, Boolean> {
    public enum MODE {ALPHABETICAL, CHRONOLOGICAL, BY_EXTENSION, FIND_IN_FILENAMES}

    public interface OnPostSortListener{
        void onPostExecute(ArrayList<File> files, MODE mode);
    }

    private ArrayList<File> mFiles;
    private final OnPostSortListener mOnPostSortListener;
    private String mSearchString;
    private MODE mode;
    public SortingTask(ArrayList<File> files, OnPostSortListener onPostSortListener){
        mFiles = files;
        mOnPostSortListener = onPostSortListener;
    }
    public SortingTask(ArrayList<File> files, OnPostSortListener onPostSortListener, String search){
        this(files, onPostSortListener);
        mSearchString = search;
    }

    @Override
    protected Boolean doInBackground(MODE... params) {
        mode=params[0];
        switch(mode){
            case ALPHABETICAL:
                mFiles.sort((file1, file2) -> file1.getName().compareTo(file2.getName()));
                return true;
            case CHRONOLOGICAL:
                mFiles.sort((file1, file2) -> {
                    long a = file1.lastModified();
                    long b = file2.lastModified();
                    return Long.compare(a, b);
                });
                return true;
            case BY_EXTENSION:
                mFiles.sort((file1, file2) -> getExt(file1.getName()).compareTo(getExt(file2.getName())));
                return true;
            case FIND_IN_FILENAMES:
                mFiles = mFiles.stream().filter(file -> file.getName().contains(mSearchString))
                    .collect(Collectors.toCollection(ArrayList::new));
                return true;
        }

        return false;
    }
    @Override
    protected void onPostExecute(Boolean success) {
        if(success) mOnPostSortListener.onPostExecute(mFiles, mode);
    }

    public String getExt(String fileName){
        int strLength = fileName.lastIndexOf(".");
        if(strLength > 0) return fileName.substring(strLength + 1).toLowerCase();
        return "";
    }
}