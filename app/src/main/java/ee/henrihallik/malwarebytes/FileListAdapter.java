package ee.henrihallik.malwarebytes;

import android.content.Context;
import android.graphics.Color;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import androidx.recyclerview.widget.RecyclerView;

import java.io.File;
import java.util.List;

public class FileListAdapter extends RecyclerView.Adapter<FileListAdapter.FileViewHolder> {
    private final LayoutInflater mInflater;
    private List<File> mFiles;

    private String mHighlightText = null;

    interface ListItemClickListener{
        void onListItemClick(int position);
    }

    final private ListItemClickListener mOnClickListener;

    class FileViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener{
        private final View itemView;
        private final TextView fileItemView;
        private final TextView pathTextView;
        private FileViewHolder(View itemView) {
            super(itemView);
            this.itemView = itemView;
            fileItemView = itemView.findViewById(R.id.fileNameTextView);
            pathTextView = itemView.findViewById(R.id.createdAtTv);
            itemView.setOnClickListener(this);
        }
        @Override
        public void onClick(View v) {
            int position = getAdapterPosition();
            mOnClickListener.onListItemClick(position);
        }
    }

    public FileListAdapter(Context context, ListItemClickListener listItemClickListener) {
        mInflater = LayoutInflater.from(context);
        mOnClickListener = listItemClickListener;
    }

    @Override
    public FileViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View itemView = mInflater.inflate(R.layout.recyclerview_item, parent, false);
        return new FileViewHolder(itemView);
    }

    @Override
    public void onBindViewHolder(FileViewHolder holder, int position) {
        if (mFiles != null) {
            File current = mFiles.get(position);
            holder.fileItemView.setText(current.getName());
            holder.pathTextView.setText(current.getParent());
            if(mHighlightText!=null && mHighlightText.length()>1 && current.getName().contains(mHighlightText)){
                holder.itemView.setBackgroundColor(Color.rgb(128,128,128));
            }else{
                holder.itemView.setBackgroundColor(Color.BLACK);
            }
        }
    }

    protected void setFiles(List<File> files){
        mFiles = files;
        notifyDataSetChanged();
    }

    @Override
    public int getItemCount() {
        if (mFiles != null)
            return mFiles.size();
        else return 0;
    }

    public void setHighlightText(String highlightText) {
        this.mHighlightText = highlightText;
    }
}