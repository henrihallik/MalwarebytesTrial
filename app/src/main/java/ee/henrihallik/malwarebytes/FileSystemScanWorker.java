package ee.henrihallik.malwarebytes;

import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.content.Context;
import android.os.Environment;

import androidx.annotation.NonNull;
import androidx.core.app.NotificationCompat;
import androidx.work.ListenableWorker;
import androidx.work.Worker;
import androidx.work.WorkerParameters;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.LinkedList;

public class FileSystemScanWorker extends Worker {

    public static final String TEMP_RESULTS_FILE_FULL_PATH = Environment.getExternalStorageDirectory()+"/tempresults.txt";

    public FileSystemScanWorker(
            @NonNull Context context,
            @NonNull WorkerParameters parameters) {
        super(context, parameters);
    }

    @NonNull
    @Override
    public ListenableWorker.Result doWork() {
        ArrayList<File> files = new ArrayList<>();
        files.addAll(scanRootDir(Environment.getRootDirectory()));
        files.addAll(scanRootDir(Environment.getExternalStorageDirectory()));

        files.addAll(scanRootDir(Environment.getDownloadCacheDirectory()));
        files.addAll(scanRootDir(Environment.getDataDirectory()));

        try {
            FileWriter out = new FileWriter(new File(TEMP_RESULTS_FILE_FULL_PATH));
            for(File f : files){
                out.write(f.getPath()+"\n");
            }
            out.flush();
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
            Result.failure();
        }

        displayNotification("Scan complete", "Found "+files.size()+" files");
        return Result.success();
    }

    private ArrayList<File> scanRootDir(File rootDir){
        LinkedList<File> dirQueue = new LinkedList<>();
        ArrayList<File> fileNames = new ArrayList<>();

        dirQueue.add(rootDir);
        while(dirQueue.size()!=0){
            File[] subDirs = dirQueue.poll().listFiles();
            if(subDirs!=null) {
                for (File file : subDirs) {
                    if(file.isFile()){
                       fileNames.add(file);
                    } else {
                       dirQueue.add(file);
                    }
                }
            }
        }
        return fileNames;
    }

    private void displayNotification(String title, String task) {
        NotificationManager notificationManager = (NotificationManager) getApplicationContext().getSystemService(Context.NOTIFICATION_SERVICE);
        NotificationChannel channel = new NotificationChannel("malwarebytestrial", "malwarebytestrial", NotificationManager.IMPORTANCE_DEFAULT);
        notificationManager.createNotificationChannel(channel);
        NotificationCompat.Builder notification = new NotificationCompat.Builder(getApplicationContext(), "malwarebytestrial")
                .setContentTitle(title)
                .setContentText(task)
                .setSmallIcon(R.mipmap.ic_launcher);
        notificationManager.notify(1, notification.build());
    }
}